{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/Loader/PersonLink.tsx","components/Loader/Peoples.tsx","components/Loader/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","sex","name","born","died","mother","motherName","father","fatherName","Error","Peoples","selectedPerson","useState","peoples","setPeoples","isLoading","setIsLoading","NONE","error","setError","useEffect","res","length","map","item","find","findParents","EMPTYMASSIVE","catch","SOMEERROR","finally","PeoplePage","useParams","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0d88ab52.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>\n        <Link\n          to={person.slug}\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      {person.mother ? (\n        <td>\n          <Link\n            to={person.mother.slug}\n            className=\"has-text-danger\"\n          >\n            {person.mother.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.motherName || '-'}</td>\n      )}\n\n      {person.father ? (\n        <td>\n          <Link\n            to={person.father.slug}\n          >\n            {person.father.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.fatherName || '-'}</td>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from './Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  selectedPerson: string,\n};\n\nenum Error {\n  NONE,\n  EMPTYMASSIVE,\n  SOMEERROR,\n}\n\nexport const Peoples: React.FC<Props> = ({ selectedPerson }) => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error>(Error.NONE);\n\n  const findParents = (res: Person[]) => {\n    setPeoples(\n      res.map((item) => {\n        return {\n          ...item,\n          mother: res.find((person) => (\n            person.name === item.motherName || null)),\n          father: res.find((person) => (\n            person.name === item.fatherName || null)),\n        };\n      }),\n    );\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((res) => {\n        return res.length ? (findParents(res)) : (setError(Error.EMPTYMASSIVE));\n      })\n      .catch(() => setError(Error.SOMEERROR))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setError(Error.NONE);\n  }, [peoples]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && (\n          <Loader />\n        )}\n\n        {error === Error.SOMEERROR && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {error === Error.EMPTYMASSIVE && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {(peoples.length > 0 && error === Error.NONE) && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peoples.map((person) => (\n                <tr\n                  key={person.slug}\n                  data-cy=\"person\"\n                  className={\n                    selectedPerson === person.slug\n                      ? 'has-background-warning'\n                      : ''\n                  }\n                >\n                  <PersonLink person={person} />\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Peoples } from './Peoples';\n\nexport const PeoplePage: React.FC = () => {\n  const { selectedPerson } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <Peoples selectedPerson={selectedPerson as string} />\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\n\nimport { PeoplePage } from './components/Loader/PeoplePage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (\n              isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item'\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => (\n              isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item'\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedPerson\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}